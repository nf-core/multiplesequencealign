/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/multiplesequencealign Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                        = null
    seqs                         = null
    tools                        = null
    templates_suffix             = ".pdb"
    pdbs_dir                     = null
    tree                         = null
    args_tree                    = null
    aligner                      = null
    args_aligner                 = null

    // Preprocessing and validation
    skip_validation              = false
    skip_preprocessing           = false
    skip_pdbconversion           = false

    // Alignment
    build_consensus              = false

    // Stats
    skip_stats                   = false
    calc_sim                     = false
    calc_seq_stats               = true
    extract_plddt                = false

    // Evaluation
    skip_eval                    = false
    calc_sp                      = true
    calc_tc                      = true
    calc_irmsd                   = false
    calc_gaps                    = true
    calc_tcs                     = false

    skip_compression             = false

    // MultiQC options
    multiqc_config               = null
    multiqc_title                = null
    multiqc_logo                 = null
    max_multiqc_email_size       = '25.MB'
    multiqc_methods_description  = null
    skip_multiqc                 = false

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options

    // Shiny options
    shiny_app                    = "${projectDir}/bin/shiny_app"
    skip_shiny                   = false

    // Visualisation options
    skip_visualisation           = false

    // Config options
    config_profile_name          = null
    config_profile_description   = null

    custom_config_version        = 'master'
    custom_config_base           = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact       = null
    config_profile_url           = null

    // Schema validation default options
    validate_params              = true

    // Resource options
    use_gpu                      = false

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        docker.runOptions       = params.use_gpu ? '--gpus all' : '-u $(id -u):$(id -g)'
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    arm {
        docker.runOptions       = params.use_gpu ? '-u $(id -u):$(id -g) --platform=linux/amd64 --gpus all' : '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        singularity.runOptions  = params.use_gpu ? '--nv' : ""
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        singularity.pullTimeout = '60m'
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        apptainer.runOptions    = params.use_gpu ? '--nv' : ""
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test                    { includeConfig 'conf/test.config'              }
    test_full               { includeConfig 'conf/test_full.config'         }
    test_tiny               { includeConfig 'conf/test_tiny.config'         }
    test_pdb                { includeConfig 'conf/test_pdb.config'          }
    test_no_sheet           { includeConfig 'conf/test_no_sheet.config'      }
    test_conda              { includeConfig 'conf/test_conda.config'        }
    easy_deploy             { includeConfig 'conf/easy_deploy.config'       }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.4' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Load nf-core/multiplesequencealign custom profiles from different institutions.
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/multiplesequencealign.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
    fields = 'task_id, hash,native_id,name,status,exit,realtime,%cpu,rss,peak_rss,vmem,peak_vmem,rchar,wchar,cpus,start'
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'nf-core/multiplesequencealign'
    contributors    = [
        [
            name: 'Luisa Santus',
            affiliation: 'Centre for Genomic Regulation (CRG)',
            email: 'luisa.santus95@gmail.com',
            github: '@luisas',
            contribution: ['author', 'maintainer', 'contributor'],
            orcid: 'https://orcid.org/0000-0002-5992-0771'
        ],
        [
            name: ' Jose Espinosa Carrasco',
            affiliation: 'Centre for Genomic Regulation (CRG)',
            email: 'espinosacarrascoj@gmail.com',
            github: '@joseespinosa',
            contribution: ['author', 'maintainer', 'contributor'],
            orcid: 'https://orcid.org/0000-0002-1541-042X'
        ],
        [
            name: ' Leon Rauschning',
            affiliation: 'Ludwig Maximilian Universitaet (LMU)',
            email: 'leon.rauschning@tum.de',
            github: '@lrauschning',
            contribution: ['author', 'contributor'],
            orcid: ''
        ],
        [
            name: ' Alessio Vignoli',
            affiliation: 'Centre for Genomic Regulation (CRG)',
            email: 'alessio.vignoli@crg.eu',
            github: '@alessiovignoli',
            contribution: ['author', 'contributor'],
            orcid: 'https://orcid.org/0000-0001-7131-2915'
        ],
        [
            name: ' Igor Trujnara',
            affiliation: 'Centre for Genomic Regulation (CRG)',
            email: 'igor.trujnara@crg.eu',
            github: '@itrujnara',
            contribution: ['author', 'contributor'],
            orcid: ''
        ],
    ]
    homePage        = 'https://github.com/nf-core/multiplesequencealign'
    description     = """Pipeline to run and benchmark multiple sequence alignment tools."""
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.10.4'
    version         = '1.1.1dev'
    doi             = 'https://doi.org/10.5281/zenodo.13889386'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.3.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
    id 'nf-co2footprint@1.0.0-beta'
}


def co2_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

co2footprint {
    traceFile   = "${params.outdir}/pipeline_info/co2footprint_trace_${co2_timestamp}.txt"
    reportFile  = "${params.outdir}/pipeline_info/co2footprint_report_${co2_timestamp}.html"
    summaryFile = "${params.outdir}/pipeline_info/co2footprint_summary_${co2_timestamp}.txt"
}

validation {
    monochromeLogs = params.monochrome_logs
    defaultIgnoreParams = ["genomes", "fasta", "igenomes_base", "genome"]
    help {
        enabled = true
        command = "nextflow run nf-core/multiplesequencealign -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  nf-core/multiplesequencealign ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "\n* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "    https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/nf-core/multiplesequencealign/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
